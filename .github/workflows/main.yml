on:
  push:
    branches:
      - release

jobs:
  python-release:
    name: Python build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: actions/setup-python@v4.7.1
        with:
          python-version: 3.9
        name: Build for ${{ matrix.os }}

      # Install Nuitka
      - name: Install Nuitka
        run: |
          pip install nuitka
          pip install pygame

      # Install dependencywalker for Windows
      - name: Install dependencywalker
        if: matrix.os == 'windows-latest'
        run: |
          choco install dependencywalker
          choco install 7zip

      # Compile Python code with Nuitka
      - name: Compile with Nuitka
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          onefile: true
      # Upload artifact including the compiled binary and the assets folder in a zip file
      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ matrix.os }}-build
          path: |
            main.dist/
            assets/
  
  create-release:
    needs: python-release
    name: Create release for all platforms
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Create empty release
        uses: elgohr/Github-Release-Action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          title: Release-${{ github.ref }}
  
  upload-release:
    needs: create-release
    name: Upload release for all platforms
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v2.2.4
        with:
          name: ${{ matrix.os }}-build
      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: |
            main.dist/
            assets/
          asset_name: ${{ matrix.os }}-build.zip
          asset_content_type: application/zip




      
    
    
    
  
